"""
Домашнее задание 4 по курсу "Парадигмы программирования и языки парадигм".

Контекст:
Корреляция — статистическая мера, используемая для оценки связи между двумя случайными величинами.

Задача:
Написать скрипт для расчета корреляции Пирсона между двумя случайными величинами (двумя массивами).
Можете использовать любую парадигму, но рекомендую использовать функциональную,
т.к. в этом примере она значительно упростит вам жизнь.

Формула корреляции Пирсона:
r(x, y) = (xi - Mx) * (yi - My) / sqrt(((xi - Mx)**2) * ((yi - My)**2))

Значения для выходных данных:
+1 - Полная положительная корреляция
+0,8 - Сильная положительная корреляция
+0.6 - Умеренная положительная корреляция
0 - никакой корреляции
-0.6 - Умеренная отрицательная корреляция
-0,8 - Сильная отрицательная корреляция
-1 - Полная отрицательная корреляция
"""

import numpy as np


def pearson_correlation(x, y):
    # Вычисляем средние значения
    mean_x = np.mean(x)
    mean_y = np.mean(y)

    # Вычисляем отклонения от среднего
    deviation_x = x - mean_x
    deviation_y = y - mean_y

    # Вычисляем сумму произведений отклонений
    sum_product_deviations = np.sum(deviation_x * deviation_y)

    # Вычисляем квадратные корни суммы квадратов отклонений
    sum_square_deviations_x = np.sum(deviation_x**2)
    sum_square_deviations_y = np.sum(deviation_y**2)

    # Вычисляем корреляцию Пирсона
    correlation = sum_product_deviations / np.sqrt(sum_square_deviations_x * sum_square_deviations_y)

    return correlation

# Пример использования:
x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 4, 5, 7, 9])

correlation = pearson_correlation(x, y)
print("Корреляция Пирсона:", correlation)

